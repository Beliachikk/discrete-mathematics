A=[(2, "A", "B"), (2, "A", "C"),(7,"A","E"),(2,"B","C"),(2,"B","E"),
   (5,"C","E"),(9,"B","D"),(9,"E","G"),(10,"E","D"),(2,"D","G"),
   (17,"G","H"),(16,"D","H"),(5,"D","F"),(17,"F","H")]

V = set()  # множество уже соединенных вершин, set тк они будут только прибавляться, а меняться не будут/ и порядок нам тоже не важен
D = {}    # словарь списка изолированных групп вершин
MR = [] #список ребер минимального значения
Sortt = sorted(A, key=lambda x: x[0]) #сортировка 0 элементу в каждой последовательности с помощью key
for i in Sortt:
    if i[1] not in V or i[2] not in V: #тут создаем группы вершин

        if i[1] not in V and i[2] not in V:
            D[i[1]] = [i[1],i[2]] # клоюч с номерами вершин
            D[i[2]] = D[i[1]]
        else:
            if D[i[1]] not in D.values():
                D[i[2]].append(i[1])
                D[i[1]] = D[i[2]]
            else:
                D[i[1]].append(i[2])
                D[i[2]] = D[i[1]]

        MR.append(i)
        V.add(i[1])
        V.add(i[2])

for i in Sortt: #объединям группки вершин
    if i[2] not in D[i[1]]:
        MR.append(i)
        c = D[i[1]]
        D[i[1]] += D[i[2]] #объединяем списки двух групп вершин
        D[i[2]] += c
sum=0
for i in MR:
    sum+=int(i[0])
print(MR)
print(sum)